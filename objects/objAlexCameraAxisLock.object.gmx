<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexCameraAxisLock</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init vars

view_edges_set = false;

// Change these to the desired coordinate
// and call "event_user(0)" inside the 
// creation code.
// if lock_x/y is -1 it will be ignored by the camera
lock_x = -1;
lock_y = -1;
left_edge = -1;
right_edge = -1;
top_edge = -1;
bottom_edge = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for player

var _touching_player = place_meeting(x, y, objPlayer);

if(_touching_player) {
    with(objAlexStarStageCam) {
        if(other.lock_x != -1) {
            lock_x = other.lock_x;
        }
            
        if(other.lock_y != -1) {
            lock_y = other.lock_y;
        }
    }
    
    if(!view_edges_set) {
        event_user(0);
        
        with(objAlexStarStageCam) {
            view_xview[0] = target_x;
            view_yview[0] = target_y;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set min and max coords for cam

view_edges_set = true;

with(objAlexStarStageCam) {
    if(other.left_edge != -1)
        min_x = max(0, other.left_edge);
        
    if(other.top_edge != -1)
        min_y = max(0, other.top_edge);
    
    if(other.right_edge != -1)
        max_x = min(room_width - view_wview[0], max(min_x, other.right_edge - view_wview[0]));
        
    if(other.bottom_edge != -1)
        max_y = min(room_height - view_hview[0], max(min_y, other.bottom_edge - view_hview[0]));
    
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _touching_player = place_meeting(x, y, objPlayer);
if(_touching_player) {
    with(objAlexStarStageCam) {
        if(other.lock_x != -1) {
            lock_x = other.lock_x;
            view_xview[0] = lock_x - view_wview[0]/2;
        }
        
        if(other.lock_y != -1) {
            lock_y = other.lock_y;
            view_yview[0] = lock_y - view_hview[0]/2;
        }
    }
    
    if(!view_edges_set) {
        event_user(0);
        view_xview[0] = target_x;
        view_yview[0] = target_y;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
