<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexFBPCaneSpin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>sprAlexFBPCaneHitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// Change these
target_player = true;  // False means random angle
fade_in = true;  // Fades in or instantly appears
shot_spd = 10;
spin_length = 60;
stuck_length = 100;
spawn_spd = 0;  // When spawned it gets launched before acquiring a target
spawn_dir = 0;
lock_in_place = false;  // When locked it cannot charge onto a target, you have to manually unset it

friction = .5;
image_alpha = 0;
image_speed = 0.3;
alarm[0] = 1;

t = 0;
start_angle = random_range(360*4, 360*5);
target_angle = random_range(-130, 50);
spin_finished = false;
collided = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Assign spawn related values

speed = spawn_spd;
direction = spawn_dir;

if(fade_in)
    image_alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manipulate obj

if(!spin_finished) {
    t++;
    
    var _anim_val = clamp(t, 0, spin_length);
    
    if(target_player &amp;&amp; instance_exists(objPlayer)) {
        target_angle = point_direction(x, y, objPlayer.x, objPlayer.y);
    }
    
    image_alpha = min(image_alpha + 0.05, 1);
    image_angle = scrAlexEaseOutSine(_anim_val, start_angle, target_angle, spin_length);
    
    if(_anim_val == round(spin_length / 2)) {
        sprite_index = sprAlexFBPCaneHalt;
        image_speed = 0.4;   
    }
    
    if(_anim_val == spin_length &amp;&amp; !lock_in_place) {
        spin_finished = true;
        direction = image_angle;
        speed = shot_spd;
        friction = 0;
        t = 0;
        
        sprite_index = sprAlexFBPCaneCharge;
        image_speed = 0.4;
    }
}

if(collided) {
    if(t == 0) {
        sprite_index = sprAlexFBPCaneStuck;
        image_speed = 0.4; 
    
        var _spark_dir = direction + 180; 
        var _spark_x = x + lengthdir_x(sprite_width / 2, direction);
        var _spark_y = y + lengthdir_y(sprite_width / 2, direction);
        repeat(3) {
            _spark_dir += random_range(-10, 10);
            _part = scrAlexMakeParticle(_spark_x, _spark_y, 10, sprAlexFBParticleSpark, 0, _spark_dir, random_range(6, 12), false, false, false);
            _part.image_xscale = 3;
            _part.image_yscale = 3;
            _part.image_angle = _spark_dir;
            _part.blend_mode = bm_add;
            _part.add_scale = -0.3;
        }
    }
    
    t++;
    
    if(t == stuck_length) {
        var _part = scrAlexMakeParticle(x, y, 15, sprite_index, 0, direction, 0, false, true, false);
            _part.image_xscale = image_xscale;
            _part.image_yscale = image_yscale;
            _part.image_angle = image_angle;
            _part.blend_mode = bm_add;
            _part.add_scale = 0.05;
    
        instance_destroy();
    }
}

if(speed &gt; 0.1) {
    var _part = scrAlexMakeParticle(x, y, 7, sprite_index, 0, direction, 0, false, true, false);
        _part.image_xscale = image_xscale;
        _part.image_yscale = image_yscale;
        _part.image_angle = image_angle;
        _part.blend_mode = bm_add;
        
        if(spin_finished) {
            _part.image_xscale = clamp((speed / 5), 1, 3)
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for collisions when shot

if(place_meeting(x, y, objBlock)) {
    if(spin_finished &amp;&amp; !collided) {
        collided = true;
        speed = 0;
        
        while(place_meeting(x, y-2, objBlock))
            y--;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop the halt animation

if(sprite_index == sprAlexFBPCaneHalt) {
    image_index = 0;
    image_speed = 0.3;
    sprite_index = sprAlexFBPCaneReady;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
