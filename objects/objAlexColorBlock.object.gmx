<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

color_id = 0;  // 0: red, 1: blue, 2: green, 3: yellow


active = false;  // Whether the block is solid
active_block_x_scale = 0;  // Used for revealing and shrinking the solid sprite
active_block_y_scale = 0;
glow_alpha = 0;  // Used to indicate the next block
glow_spd = 2;
draw_t = 0;
ease_t = 0;
ease_length = 15;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn the controller object if it doesn't exist

if(!instance_exists(objAlexColorBlockController))
    instance_create(0, 0, objAlexColorBlockController);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if player has landed

if(place_meeting(x, y-1, objPlayer) &amp;&amp; !global.player_on_block) {
    global.player_on_block = true;
    
    with(objAlexColorBlock) {
        if(color_id == global.current_color_id)
            glow_alpha = 1;
    }
    
    audio_play_sound(sndAlexColorBlockLand, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animations and mask manipulation

if(color_id == global.current_color_id) {
    active = true;
    
    mask_index = sprite_index;    
}
else if(color_id == global.next_color_id) {
    active = false;

    mask_index = sprAlexNoMask;    
    draw_t += glow_spd;
}
else {
    active = false;
    
    mask_index = sprAlexNoMask;
    draw_t = 0;
}


// Expand
if(active) {
    ease_t = min(ease_t + 1, ease_length);
    active_block_x_scale = scrAlexEaseOutElastic(ease_t, 0, image_xscale, ease_length);
    active_block_y_scale = scrAlexEaseOutElastic(ease_t, 0, image_yscale, ease_length);
    
    if(global.player_on_block)
        glow_alpha = lerp(glow_alpha, 0.25, 0.1);
    else
        glow_alpha = 0;
} 
// Shrink
else {
    ease_t = max(ease_t - 1, 0);
    active_block_x_scale = scrAlexEaseInSine(ease_t, 0, image_xscale, ease_length);
    active_block_y_scale = scrAlexEaseInSine(ease_t, 0, image_yscale, ease_length);
    
    glow_alpha = abs(dsin(draw_t)) * 0.5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if player is inside

if(place_meeting(x, y, objPlayer) &amp;&amp; active)
    scrKillPlayer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make block solid if it's the lowest/first color

if(color_id == 0) {
    active = true;
    active_block_x_scale = image_xscale;
    active_block_y_scale = image_yscale;
    ease_t = ease_length;
} else {
    mask_index = sprAlexNoMask;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing shenanigans

draw_sprite_ext(sprite_index, 1, x, y, image_xscale, image_yscale, 0, -1, 0.5);
draw_sprite_ext(sprite_index, 0, x, y, active_block_x_scale, active_block_y_scale, 0, -1, 1);

draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, 0, -1, glow_alpha);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
