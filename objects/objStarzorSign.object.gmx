<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprStarzorSignIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

image_speed = 0.3;

text = "Null"  // Change me in creation code

timer = 0;
current_letter = 0;
displayed_text = "";
player_is_near = false;
text_sep = -1;
text_width = 200;
text_font = fDefault12;
text_col1 = $86d5a1;
text_col2 = $6dc447;
text_color = text_col1;
activation_distance = 64;
talking = false;
letter_delay = 2;
letter_sfx = sndJump; // Change later
bounce_timer = 0;
bounce_length = 30;
draw_y = y;
draw_scale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// logic

timer++;

draw_y = ystart + dsin(timer*2) * 4;
text_color = merge_colour(text_col1, text_col2, abs(dsin(timer*3)));

if(instance_exists(objPlayer))
    player_is_near = (distance_to_object(objPlayer) &lt;= activation_distance);
    
if(player_is_near) {
    if(scrButtonCheckPressed(global.upButton))
        talking = true;
} else {
    talking = false;
    bounce_timer = 0;
    current_letter = 0;
    displayed_text = "";
}

if(talking) {
    var _text_length = string_length(text);
    if(current_letter &lt; _text_length) {
        if(timer mod letter_delay == 0) {
            current_letter++;
            displayed_text += string_char_at(text, current_letter);
            audio_stop_sound(letter_sfx);
            audio_play_sound(letter_sfx, 0, false);
        }
        
        sprite_index = sprStarzorSignTalking;
    } else {
        sprite_index = sprStarzorSignIdle;
    }

    if(bounce_timer &lt;= bounce_length) {
        draw_scale = scrAlexEaseOutElastic(bounce_timer, 0.7, 1, bounce_length)
        bounce_timer++;
    }
} else {
    sprite_index = sprStarzorSignIdle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

draw_sprite_ext(sprite_index, image_index, x, draw_y, draw_scale, draw_scale, image_angle, image_blend, image_alpha);

if(!talking &amp;&amp; player_is_near)
    draw_sprite(sprStarzorSignArrow, 0, x, draw_y - 24);

draw_set_font(text_font);
draw_set_colour(text_color);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
var _text_y = y - string_height("E") - string_height_ext(displayed_text, text_sep, text_width);

draw_text_ext(x, _text_y, displayed_text, text_sep, text_width);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
