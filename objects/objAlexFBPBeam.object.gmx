<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexTestShapeSquare</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// Change these
tell_dur = 30;
fire_dur = 5;
size = 32;
angle_incr = 0;
image_angle = 90;
travel_dist_x = 0;
travel_dist_y = 0;


image_xscale = 40;
mask_index = -1;

t = 0;
flicker_spd = 0;
flicker_max_spd = 0.3;
flicker_alpha = 0;
tell_finished = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!tell_finished) {
    t++;
    
    if(t &gt;= tell_dur) {
        t = 0;
        tell_finished = true;
        mask_index = sprite_index;
        image_alpha = 1;
    } else {
        var _anim_val = t / tell_dur;
        flicker_spd = scrAlexEaseInSine(t, 0, flicker_max_spd, tell_dur)
        flicker_alpha = frac(flicker_alpha - flicker_spd);
        image_alpha = flicker_alpha * _anim_val;
        image_angle += angle_incr;
        image_yscale = 1 - _anim_val;
        
        // Assign position
        x = scrAlexEaseOutSine(t, xstart, xstart + travel_dist_x, tell_dur);
        y = scrAlexEaseOutSine(t, ystart, ystart + travel_dist_y, tell_dur);
    }
} else {
    if(t == fire_dur) {
        instance_destroy();
    } else {
        t++;
        
        var _init_size = size / sprite_get_height(sprite_index);
        image_yscale = scrAlexEaseOutSine(t, _init_size, 0, fire_dur);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
