<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

t = 0;

// Top and bottom bars
black_bars = true;
bar_anim_length = 50;
bar_scroll_min_speed = 0.5;
bar_scroll_max_speed = 8;
bar_scroll_speed = bar_scroll_max_speed;
bar_y = -96;
bar_rise_distance = 48;
bar_render_x = 0;
bar_length = 32;
bar_height = 96;

// Black overlay
overlay_alpha = 1;

// Backgrounds
bg_fade_interval = 2000;
bg_fade_index = 0;
bg_amnt = 6;
for(var i=0; i&lt;bg_amnt; i++) {
    bg_x[i] = 0;
    bg_y[i] = 0;
    bg_alpha[i] = 1;
    bg_fade[i] = false;
    
    switch(i) {
        case 0:
            bg_sprite[i] = bAlexFloor1;
            bg_x_spd[i] = .5;
            bg_y_spd[i] = 0;
            break;
            
        case 1:
            bg_sprite[i] = bAlexFloor2;
            bg_x_spd[i] = .5;
            bg_y_spd[i] = 0;
            break;
            
        case 2:
            bg_sprite[i] = bAlexFloor3;
            bg_x_spd[i] = .5;
            bg_y_spd[i] = 0;
            break;
            
        case 3:
            bg_sprite[i] = bAlexFloor4;
            bg_x_spd[i] = .5;
            bg_y_spd[i] = 0;
            break;
            
        case 4:
            bg_sprite[i] = bAlexFloor5;
            bg_x_spd[i] = .5;
            bg_y_spd[i] = 0;
            break;
            
        case 5:
            bg_sprite[i] = bAlexFloor6;
            bg_x_spd[i] = .5;
            bg_y_spd[i] = 0;
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Logic

t++;

// Top &amp; Bottom bars
if(t &lt;= bar_anim_length) {
    var _anim_progress = scrAlexEaseOutSine(t, 0, 1, bar_anim_length);
    bar_y = -bar_height + (bar_rise_distance * _anim_progress);
}
if(!black_bars) {
    bar_y = lerp(bar_y, -bar_height, 0.05);
}
bar_scroll_speed = lerp(bar_scroll_speed, bar_scroll_min_speed, 0.05);
bar_render_x = (bar_render_x + bar_scroll_speed) mod bar_length;

// Black overlay
if(t &lt; 200) {
    overlay_alpha = max(overlay_alpha - 0.02, 0);
}

// Backgrounds
if(t mod bg_fade_interval == 0 &amp;&amp; bg_fade_index &lt; bg_amnt-1) {
    bg_fade[bg_fade_index] = true;
    bg_fade_index++;
}
for(var i=0; i&lt;bg_amnt; i++) {
    bg_x[i] += bg_x_spd[i];
    bg_y[i] += bg_x_spd[i];
    
    if(bg_fade[i])
        bg_alpha[i] = max(bg_alpha[i] - 0.01, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the top &amp; bottom bars

var bar_segments = round(display_get_gui_width() / bar_length);
var bar_bottom_y = display_get_gui_height()- bar_y - bar_height;
var bar_render_x_bottom = bar_length - bar_render_x;
for(var i=0; i&lt;bar_segments; i++) {
    var segment_x = i*32;
    draw_sprite_part(sprAlexPauseUITopBar, 0, bar_render_x, 0, bar_length, bar_height, segment_x, bar_y);
    draw_sprite_part(sprAlexPauseUIBottomBar, 0, bar_render_x_bottom, 0, bar_length, bar_height, segment_x, bar_bottom_y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw black overlay

draw_set_alpha(overlay_alpha);
draw_set_colour(c_black);
draw_rectangle(-1, -1, 800, 608, false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw background

for(var i=bg_amnt-1; i&gt;=0; i--) {
    draw_background_tiled_ext(bg_sprite[i], bg_x[i], bg_y[i], 2, 2, -1, bg_alpha[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
