<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

t = 0;

bg_col1 = $b8a44f;
bg_col2 = c_white;
bg_hue = 120;
bg_hue_spd = 0;
bg_hue_spd_max = 30;
bg_hue_accel = 0.01;
bg_merge_val = 1;
bg_col = bg_col1;
boss_alpha = 1;
player_alpha = 1;
explosion_freq = 15;
halo_scale = 0;
halo_alpha = 0;
halo_angle = 0;
halo_angle_spd = 2;
halo_angle_accel = 0.05;
white_circle_rad = 0;
fade_out_alpha = 0;
fade_out_spd = 0.01;

clear_string = "GAMECLEAR"
letter_index = 0;
letter_lerp_spd = 0.35;
letter_spacing = 130;
letter_vertical_space = 200;
var _start_x = 200;
var _start_y = 200;
var _x = _start_x;
var _y = _start_y;
for(var i=0; i&lt;string_length(clear_string); i++) {
    letter[i] = string_char_at(clear_string, i+1);
    letter_x[i] = _x;
    letter_y[i] = _y;
    letter_xscale[i] = 0;
    letter_yscale[i] = 12;
    letter_active[i] = false;
    
    _x += letter_spacing;
    if(i == 3) {
        _x = _start_x - (letter_spacing/2);
        _y += letter_vertical_space;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Logic

t++;

bg_col1 = make_colour_hsv(bg_hue, 100, 210);
bg_col = merge_colour(bg_col1, bg_col2, bg_merge_val);

// Inital glow
if(t &gt; 30 &amp;&amp; t &lt; 150) {
    bg_merge_val = lerp(bg_merge_val, 0, 0.05);
}

// Increase hue
if(bg_hue_spd &gt; 0) {
    bg_hue += bg_hue_spd;
}
if(t &gt; 30) {
    bg_hue_spd += bg_hue_accel;
    bg_hue_spd = min(bg_hue_spd, bg_hue_spd_max);
}

// Explosion particles
if(t &gt;= 100 &amp;&amp; t &lt;= 490 &amp;&amp; t mod explosion_freq == 0) {
    with(objAlexFinalBoss2) {
        var _part = scrAlexMakeParticle(draw_x + random_range(-100, 100), draw_y + random_range(-100, 100), 150, sprAlexPandoraBoxExplosion, 0.5, 0, 0, false, false, false);
            _part.end_on_last_frame = true;
            _part.start_col = c_black;
            _part.image_xscale = 2;
            _part.image_yscale = 2;
            _part.depth = -1000;
            
        repeat(2) {
            audio_play_sound(sndFB2Explosion, 0, false);
        }
    }
}
if(t == 200)
    explosion_freq -= 5;
if(t == 300)
    explosion_freq -= 5;
    
// Start glow animation
if(t &gt;= 400 &amp;&amp; t &lt; 500) {
    bg_merge_val = min(bg_merge_val + 0.0025, 1);
    halo_alpha = min(halo_alpha + 0.01, 1);
    halo_scale = halo_alpha;
    halo_angle += halo_angle_spd;
    halo_angle_spd += halo_angle_accel;
    
    player_alpha = max(player_alpha - 0.02, 0);
}

// Expand white circle
if(t &gt; 500 &amp;&amp; t &lt;= 530) {
    white_circle_rad = scrAlexEaseOutSine(t-500, 0, 2000, 30);
    bg_merge_val = scrAlexEaseOutSine(t-500, 0.25, 1, 30);
    boss_alpha = scrAlexEaseOutSine(t-500, 1, 0, 30);
}

// Clear letters
if(t &gt;= 540 &amp;&amp; (t-540) mod 5 == 0 &amp;&amp; letter_index &lt; string_length(clear_string)) {
    letter_active[letter_index] = true;
    letter_index++;
}
for(var i=0; i&lt;string_length(clear_string); i++) {
    if(letter_active[i]) {
        letter_xscale[i] = lerp(letter_xscale[i], 1, letter_lerp_spd);
        letter_yscale[i] = lerp(letter_yscale[i], 1, letter_lerp_spd);
    }
}

// Fade out to black
if(t &gt;= 710) {
    fade_out_alpha += fade_out_spd;
}

// Goto credits
if(t == 960) {
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Halo and white circle

var _x = 400;
var _y = 304;

draw_set_blend_mode(bm_add);
draw_sprite_ext(sprAlexFB2DefeatGlow, 0, _x, _y, halo_scale, halo_scale, halo_angle, -1, halo_alpha);
draw_sprite_ext(sprAlexFB2DefeatGlow, 0, _x, _y, halo_scale*2, halo_scale*2, -halo_angle, -1, halo_alpha);
draw_set_blend_mode(bm_normal);

if(white_circle_rad &gt; 0) {
    draw_set_circle_precision(48);
    draw_set_blend_mode(bm_add);
    draw_circle_colour(_x, _y, white_circle_rad, c_white, c_black, false);
    draw_set_circle_precision(24);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw letters and fade out

draw_set_font(fGameClear);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_colour(c_black);

for(var i=0; i&lt;string_length(clear_string); i++) {
    if(letter_active[i]) {
        draw_text_transformed(letter_x[i], letter_y[i], letter[i], letter_xscale[i], letter_yscale[i], 0);
    }    
}

draw_set_alpha(fade_out_alpha);
draw_rectangle(-1, -1, 800, 608, false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw black side borders

draw_set_colour(c_black);
draw_rectangle(-5000, -5000, -1, 5000, false);
draw_rectangle(display_get_gui_width(), -5000, 5000, 5000, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the silhouettes and other effects

draw_set_colour(bg_col);
draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false);


// Black silhouettes
with(objAlexFinalBoss2) {
    draw_sprite_ext(sprite_index, image_index, draw_x, draw_y, draw_xscale, draw_yscale, image_angle, c_black, other.boss_alpha);
    draw_sprite_ext(sprAlexAstralCrown, 0, draw_x, draw_y + (crown_y_offset*draw_yscale), draw_xscale, draw_yscale, image_angle, c_black, other.boss_alpha);
    if(eyes_sprite != -1)
        draw_sprite_ext(eyes_sprite, eyes_img_index, draw_x, draw_y, draw_xscale, draw_yscale, image_angle, other.bg_col, other.boss_alpha);
    if(mouth_sprite != -1)
        draw_sprite_ext(mouth_sprite, mouth_img_index, draw_x, draw_y, draw_xscale, draw_yscale, image_angle, other.bg_col, other.boss_alpha);
}

with(objAlexFlyingPlayer) {
    draw_sprite_ext(body_sprite, image_index, x, y, body_scale*body_xflip, body_scale, 0, c_black, other.player_alpha);
    draw_sprite_ext(feet_sprite, image_index, feet_x, feet_y, body_scale*body_xflip, body_scale, 0, c_black, other.player_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
