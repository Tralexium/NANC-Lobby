<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexPandoraBoxKey</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-251</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

image_speed = 0.3;

collected = false;
inserted = false;
dist_from_box = 24;

target_x = x;
target_y = y;

t = 0;
wiggle_y = 0;
glow_col = $b8a44f;
glow_alpha = 0;
ring_alpha = 0;
ring_alpha_multi = 0;
ring_angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animations

t++;

if(!collected) {
    ring_alpha_multi = min(ring_alpha_multi + 0.03, 0.3);
} else {
    ring_alpha_multi = max(ring_alpha_multi - 0.05, 0);
}

if(!inserted) {
    wiggle_y = dsin(t*3)*6;
    glow_alpha = 0.5 + dsin(t*2)*0.25;
} else {
    wiggle_y = lerp(wiggle_y, 0, 0.2);
    glow_alpha = max(glow_alpha - 0.05, 0);
}

ring_alpha = abs(dsin(t))*ring_alpha_multi;
ring_angle -= 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Logic

if(inserted) {
    var _pandora_box = instance_nearest(x, y, objAlexPandoraBox);
    
    if(_pandora_box != noone) {
        target_x = _pandora_box.x;
        target_y = _pandora_box.y;
        
        if(round(x) == _pandora_box.x &amp;&amp; round(y) == _pandora_box.y) {
            _pandora_box.unlocked = true;
            _pandora_box.image_index = 0;
            instance_destroy();
        }
    }
}
else if(collected) {
    with(objPlayer) {
        other.target_x = x;
        other.target_y = y - 32;
        
        if(distance_to_object(objAlexPandoraBox) &lt;= other.dist_from_box)
            other.inserted = true;
    }
    
    if(!instance_exists(objPlayer)) {
        target_x = xstart;
        target_y = ystart;
    }
}

x = lerp(x, target_x, 0.15);
y = lerp(y, target_y, 0.15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set as collected

if(!collected) {
    collected = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw shenanigans

draw_set_blend_mode(bm_add);
draw_sprite_ext(sprAlexGlowOrb, 0, x, y + wiggle_y, 1, 1, 0, glow_col, glow_alpha);
draw_sprite_ext(sprAlexPandoraRing, 0, x, y + wiggle_y, 0.5, 0.5, ring_angle, -1, ring_alpha);
draw_set_blend_mode(bm_normal);

draw_sprite(sprite_index, image_index, x, y + wiggle_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
