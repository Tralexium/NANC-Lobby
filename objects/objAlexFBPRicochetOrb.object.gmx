<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexFBPBlackOrb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>sprAlexFBPOrbHitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// Change these:
travel_time = 100;
time_until_fall = irandom_range(20, 70);
friction_after_time = 0.25;
fall_grav = 0.2;


t = 0;
is_falling = false;

rico_sfx = sndAlexFBRicochet;
explosion_sfx = sndAlexFBBlackOrbExplosion;
is_outside = false;
image_xscale = 40 / sprite_get_height(sprAlexFBPOrbHitbox);
image_yscale = image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Explosion particles

if(!is_outside) {
    var _add_scale = -0.1 * image_xscale;
    var _spark_amnt = 6;
    var _spark_scale = image_xscale * 4;
    var _spark_add_scale = -0.4 * image_xscale;
    var _spark_spd = random_range(8, 14) * image_xscale;
    scrFBPExplosionParticles(sprite_index, 7, 1.4, _add_scale, true, bm_add, _spark_amnt, 10, _spark_scale, _spark_add_scale, _spark_spd);
    scrFBShakeCam(15, 5, 5, 2, 4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manipulate obj

t++;

// ricochet against walls
if(place_meeting(x + hspeed, y, objBlock)) {
    hspeed *= -1;
    
    audio_play_sound(rico_sfx, 0, false);
}
if(place_meeting(x, y + vspeed, objBlock)) {
    vspeed *= -1;
    
    // Spawn a beam and shockwave when falling
    if(is_falling) {
        while(!place_meeting(x, y, objBlock))
            y++;
    
        repeat(3) {
            var _orb = scrFBPOrb(x, y, 16, random_range(80, 100), 0, random_range(11, 13));
                _orb.gravity = .25;
        }
            
        scrFBPBeam(x, y, 32, 90, 0, 1);
        scrFBPShockwave(x, y);
    
        audio_stop_sound(explosion_sfx);
        audio_play_sound(explosion_sfx, 0, false);
        
        instance_destroy();
    } else {
        audio_stop_sound(rico_sfx);
        audio_sound_pitch(rico_sfx, random_range(0.9, 1.1));
        audio_play_sound(rico_sfx, 0, false);
    }
}

if(t == travel_time) {
    friction = friction_after_time;
}

if(t == (travel_time + time_until_fall)) {
    gravity = fall_grav;
    speed = 0;
    friction = 0;
    
    is_falling = true;
}


var _part = scrAlexMakeParticle(x, y, 8, sprAlexFBPOrbTrail, 0, direction, 0, false, true, false);
    _part.image_xscale = image_xscale;
    _part.image_yscale = image_yscale;
    _part.image_angle = direction;
    _part.blend_mode = bm_add;
    _part.add_scale = -0.07 * image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mark that it's outside the room

is_outside = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
