<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexChangeColorBlockMaxID</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

active = false;
dur = 60;
intensity = 1;
t = 0;

blk_texture = sprFinalStarLevelTexture;
blk_col_r = 105 / 255;
blk_col_g = 100 / 255;
blk_col_b = 165 / 255;

bg_target_hue = 0.7;
bg_target_sat = 0.5;
bg_target_val = 0.15;
bg_hue_incr = 0.022;
bg_sat_incr = 0.038;
bg_val_incr = 0.6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fade out the effect

if(active) {
    t++;
    
    image_alpha = scrAlexEaseOutSine(t, 1, 0, dur);
    intensity = scrAlexEaseOutSine(t, 1, 0, dur);
    
    if(t &gt;= dur) {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate the effect &amp; change the visuals &amp; start eerie music

if(!active) {
    active = true;

    with(objAlexObstacleRenderer) {
        block_texture_sprite = other.blk_texture;
        outline_col[0] = other.blk_col_r;
        outline_col[1] = other.blk_col_g;
        outline_col[2] = other.blk_col_b;
    }
    
    with(objAlexStarStageBG) {
        base_col_hsv[0] = other.bg_target_hue;
        base_col_hsv[1] = other.bg_target_sat;
        base_col_hsv[2] = other.bg_target_val;
        hue_increment = other.bg_hue_incr;
        sat_increment = other.bg_sat_incr;
        val_increment = other.bg_val_incr;
    }
    
    audio_play_sound(sndAlexFinalStageVisualChange, 0, false);
    
    if(!audio_is_playing(musAlexFinalStageEerie)) {
        scrPlayMusic(musAlexFinalStageEerie, true);
        audio_sound_gain(global.currentMusic, 1, 1000);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the effect

if(active) {
    shader_set(shdBktGlitch);
    
    BktGlitch_set_resolution_of_application_surface();
    BktGlitch_config_preset(BktGlitchPreset.E);
    BktGlitch_set_time(current_time * 0.2);
    BktGlitch_set_intensity(intensity);
    
    if(surface_exists(application_surface)) {
        draw_surface(application_surface, 0, 0);
    }

    shader_reset();
    
    draw_set_alpha(image_alpha);
    draw_set_colour(c_black)
    draw_rectangle(-1, -1, display_get_gui_width(), display_get_gui_height(), false);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Don't draw self
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
