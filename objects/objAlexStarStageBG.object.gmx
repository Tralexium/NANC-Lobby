<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// Change these
base_col_hsv[0] = 0.56; // Hue
base_col_hsv[1] = 0.65; // Saturation
base_col_hsv[2] = 1.0; // Value / Luminosity

bg_surf = noone;
surf_x = view_xview[0];
surf_y = view_yview[0];
surf_w = view_wview[0];
surf_h = view_hview[0];

// shader related
shader = sGradientHoles;
shader_timer = random(100);
shader_timer_increment = 0.001;
shader_offset_x_multiplier = 1 / surf_w;
shader_offset_y_multiplier = 1 / surf_h;
u_time = shader_get_uniform(shader, "u_time");
u_base_col_hsv = shader_get_uniform(shader, "u_base_col_hsv");
u_cam_offset = shader_get_uniform(shader, "u_cam_offset");
cam_offset[0] = surf_x * shader_offset_x_multiplier;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Attach surface to the view

surf_x = view_xview[0];
surf_y = view_yview[0];
cam_offset[0] = surf_x * shader_offset_x_multiplier;
cam_offset[1] = -surf_y * shader_offset_y_multiplier;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the BG

if(!surface_exists(bg_surf)) {
    bg_surf = surface_create(surf_w, surf_h);
    
    surface_set_target(bg_surf);
        draw_clear(c_white);
    surface_reset_target();
}

shader_timer += shader_timer_increment;

shader_set(shader);
    shader_set_uniform_f(u_time, shader_timer);
    shader_set_uniform_f_array(u_cam_offset, cam_offset);
    shader_set_uniform_f_array(u_base_col_hsv, base_col_hsv);
    draw_surface(bg_surf, surf_x, surf_y);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
