<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

fade_delay = 40;

go_string = "GAME OVER";
go_font = fGameOver;
go_letter_outline_size = 9;
go_letter_delay = 5;
go_letter_anim_length = 40;
go_letter_distance = 80;

var scr_to_get_key = scrGetKeybind;
var array_index = 0;
if(global.controllerMode) {
    scr_to_get_key = scrGetControllerBind;
    array_index = 1;
}
restart_string = "Press ["+script_execute(scr_to_get_key,global.restartButton[array_index])+"] to Restart";
restart_font = fMenuLobby12;
restart_alpha = 0;
restart_anim_length = 40;

timer = 0;
overlay_alpha = 0;
text_col = $e8fff5;
outline_col = $2e1814;

bar_anim_length = 20;
bar_scroll_min_speed = 0.5;
bar_scroll_max_speed = 8;
bar_scroll_speed = bar_scroll_max_speed;
bar_y = -96;
bar_rise_distance = 72;
bar_render_x = 0;
bar_length = 32;
bar_height = 96;

go_string_size = string_length(go_string)
for(var i = 0; i &lt; go_string_size; i++) {
    go_letter_alpha[i] = 0;
    go_letter_add_y[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animations

timer++;

// Top &amp; Bottom bars
if(timer &lt;= bar_anim_length) {
    var _anim_progress = scrAlexEaseOutSine(timer, 0, 1, bar_anim_length);
    bar_y = -bar_height + (bar_rise_distance * _anim_progress);
}
bar_scroll_speed = lerp(bar_scroll_speed, bar_scroll_min_speed, 0.1);
bar_render_x = (bar_render_x + bar_scroll_speed) mod bar_length;


// Overlay alpha
if(timer &lt;= 50 + fade_delay) {
    overlay_alpha = scrAlexEaseOutSine(timer - fade_delay, 0, 0.4, 50);
}

// Game over letters
var _time_begin, _letter_timer;
for(var i = 0; i &lt; go_string_size; i++) {
    _time_begin = go_letter_delay * i;
    _letter_timer = clamp(timer - (_time_begin + fade_delay), 0, go_letter_anim_length);

    go_letter_alpha[i] = scrAlexEaseOutSine(_letter_timer, 0, 1, go_letter_anim_length);
    go_letter_add_y[i] = scrAlexEaseOutElastic(_letter_timer, -100, 0, go_letter_anim_length);
}

// Restart text
_time_begin = go_letter_delay * (go_string_size + 4) - fade_delay;
_letter_timer = clamp(timer - (_time_begin + fade_delay), 0, restart_anim_length);

restart_alpha = scrAlexEaseOutSine(_letter_timer, 0, 1, restart_anim_length);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw it

// Overlay
var _scroll_amnt = timer/2;
draw_set_colour(outline_col);
draw_set_alpha(overlay_alpha);
draw_rectangle(-1, -1, view_wport[0], view_hport[0], false);
draw_sprite_tiled_ext(sprAlexPauseUIBG, 1, _scroll_amnt, _scroll_amnt, 1, 1, outline_col, overlay_alpha/4);


// Game over text
var _letter_x, _letter_y, _letter_str;
draw_set_font(go_font);
for(var i = 0; i &lt; go_string_size; i++) {
    if(go_letter_alpha[i] &gt; 0) {
        _letter_x = (view_wport[0]/2) + (go_letter_distance * (i - go_string_size/2 + 0.5));
        _letter_y = (view_hport[0]/2) + 75 + go_letter_add_y[i];
        _letter_str = string_char_at(go_string, i+1);
        draw_set_alpha(go_letter_alpha[i]);
        scrDrawTextSquareOutline(_letter_x, _letter_y, _letter_str, text_col, outline_col, go_letter_outline_size, fa_center, fa_bottom);
    }
}

// Restart text
draw_set_alpha(restart_alpha);
draw_set_font(restart_font);
var _string_x, _string_y;
_string_x = view_wport[0]/2;
_string_y = (view_hport[0]/2) + 55;
scrDrawTextSquareOutline(_string_x, _string_y, restart_string, text_col, outline_col, 2, fa_center, fa_top);


// Draw the top &amp; bottom bars
draw_set_alpha(1);
var bar_segments = round(display_get_gui_width() / bar_length);
var bar_bottom_y = display_get_gui_height()- bar_y - bar_height;
var bar_render_x_bottom = bar_length - bar_render_x;
for(var i=0; i&lt;bar_segments; i++) {
    var segment_x = i*32;
    draw_sprite_part(sprAlexPauseUITopBar, 0, bar_render_x, 0, bar_length, bar_height, segment_x, bar_y);
    draw_sprite_part(sprAlexPauseUIBottomBar, 0, bar_render_x_bottom, 0, bar_length, bar_height, segment_x, bar_bottom_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
