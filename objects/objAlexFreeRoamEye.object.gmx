<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexEyeCamPedestal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars


active = false;
colliding = false;
listen_for_input = true;

// -1 defaults to the current min max values of the cam
cam_min_x = -1;
cam_max_x = -1;
cam_min_y = -1;
cam_max_y = -1;
old_min_x = -1;
old_max_x = -1;
old_min_y = -1;
old_max_y = -1;

t = 0;
eye_y_offset = -16;
eye_y = y + eye_y_offset;
eye_wiggle = 3;
eye_img_speed = 0.3;
eye_img_index = 0;
arrow_x = x;
arrow_y = y;
arrow_image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restore input

listen_for_input = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Eye wiggle &amp; animations

t++;

eye_img_index += eye_img_speed;
eye_y = (ystart + eye_y_offset) + dsin(t*3)*eye_wiggle;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Arrow above kid's head

arrow_image_index += .3;

var p = objPlayer;
colliding = place_meeting(x, bbox_bottom - 1, p)
if(colliding) {
    arrow_x = p.x;
    arrow_y = p.y - 16;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Input

if(place_meeting(x, bbox_bottom - 1, objPlayer) &amp;&amp; listen_for_input) {
    // Activate
    if(!active &amp;&amp; scrButtonCheckPressed(global.upButton)) {
        active = true;
        
        with(objAlexStarStageCam) {
            free_roam = true;
            
            if(other.cam_min_x != -1) {
                other.old_min_x = xMin;
                xMin = other.cam_min_x;
            }
            if(other.cam_max_x != -1) {
                other.old_max_x = xMax;
                xMax = other.cam_max_x;
            }
            if(other.cam_min_y != -1) {
                other.old_min_y = yMin;
                yMin = other.cam_min_y;
            }
            if(other.cam_max_y != -1) {
                other.old_max_y = yMax;
                yMax = other.cam_max_y;
            }
        }
        
        with(objPlayer)
            frozen = true;
        
        listen_for_input = false;
        alarm[0] = 40;
    }
    // Deactivate
    if(active &amp;&amp; scrButtonCheckPressed(global.shootButton)) {
        active = false;
        
        with(objAlexStarStageCam) {
            free_roam = false;
            
            if(other.old_min_x != -1) {
                xMin = other.old_min_x;
            }
            if(other.old_max_x != -1) {
                xMax = other.old_max_x;
            }
            if(other.old_min_y != -1) {
                yMin = other.old_min_y;
            }
            if(other.old_max_y != -1) {
                yMax = other.old_max_y;
            }
        }
        
        with(objPlayer)
            frozen = false;
        
        listen_for_input = false;
        alarm[0] = 40;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw eye

draw_self();

draw_sprite(sprAlexEyeCam, eye_img_index, x, eye_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw arrow over the player's head

if(colliding &amp;&amp; !active &amp;&amp; listen_for_input)
    draw_sprite(sprAlexPressUpArrow, arrow_image_index, arrow_x, arrow_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
