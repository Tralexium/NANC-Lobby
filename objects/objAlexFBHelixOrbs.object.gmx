<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

spd = 1;
orb_size = 32;
acceleration = .07;
seperation = 64;
wiggle_spd = 3.7;

t = 0;
orbs_spawned = false;
line_x = x;
line_y1 = y;
line_y2 = y;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make sure the orbs are destroyed as well

for(var i = 0; i&lt;2; i++) {
    if(!instance_exists(orb[i]))
        continue;

    orb[i].is_outside = true;
    instance_destroy(orb[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn the orbs

var _add_scale = -0.1 * image_xscale;
var _spark_amnt = 6;
var _spark_scale = image_xscale * 4;
var _spark_add_scale = -0.4 * image_xscale;
var _spark_spd = random_range(8, 14) * image_xscale;
scrFBPExplosionParticles(sprAlexFBPOrb, 7, 1.4, _add_scale, true, bm_add, _spark_amnt, 10, _spark_scale, _spark_add_scale, _spark_spd);

repeat(2)
audio_play_sound(sndAlexFBBlackOrbExplosion, 0, false);

for(var i = 0; i&lt;2; i++) {
    orb[i] = scrFBPOrb(x, y, orb_size, 0, 0, 0);
}

hspeed = spd;
orbs_spawned = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manipulate the orbs

if(orbs_spawned) {
    hspeed += acceleration;
    t += wiggle_spd;
    
    var orb_t = t;
    for(var i = 0; i&lt;2; i++) {
        if(!instance_exists(orb[i]))
            continue;
    
        if(i mod 2 == 0)
            orb_t = t + 180;
        else
            orb_t = t;
    
        var _previous_orb_x = orb[i].x;
        var _previous_orb_y = orb[i].y;
        orb[i].x = x;
        orb[i].y = y + dsin(orb_t) * seperation;
        orb[i].direction = point_direction(_previous_orb_x, _previous_orb_y, orb[i].x, orb[i].y)
    }
    
    line_x = x;
    line_y1 = y + dsin(t) * seperation;
    line_y2 = y + dsin(t+180) * seperation;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy if outside

if(orbs_spawned)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw line between the orbs

draw_set_blend_mode(bm_add);
draw_line_width_colour(line_x, line_y1, line_x, line_y2, 28, c_fuchsia, c_black);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
