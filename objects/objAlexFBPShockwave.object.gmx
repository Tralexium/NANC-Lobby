<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexFBPShockwave</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars


// Change these:
travel_dist = 96;
travel_dur = 10;


t = 0;

// Make sure it's above the floor
if(place_meeting(x, y, objBlock)) {
    while(place_meeting(x, y, objBlock) || place_meeting(x, y, objBetterBlock)) {
        y--;
    }
} else {
    while(!place_meeting(x, y, objBlock) &amp;&amp; !place_meeting(x, y, objBetterBlock)) {
        y++;
    }
}

image_speed = .4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shrink as it travels


if(t &lt; travel_dur) {
    t++;
    x = scrAlexEaseOutCubic(t, xstart, xstart + travel_dist, travel_dur);
    
    var _part = scrAlexMakeParticle(x, y, 4, sprite_index, 0, direction, 0, false, true, false);
        _part.image_xscale = image_xscale - 0.1;
        _part.image_yscale = image_yscale - 0.1;
        _part.blend_mode = bm_add;
        _part.start_col = c_fuchsia;
        _part.add_scale = -0.1;
        
    if(!place_meeting(x + (sprite_width/2), y+1, objBlock) &amp;&amp;
       !place_meeting(x + (sprite_width/2), y+1, objBetterBlock))
        t = travel_dur;
} else {
    image_xscale = lerp(image_xscale, 0, 0.35);
    image_yscale = abs(image_xscale);
    
    if(image_xscale &gt; -0.1 &amp;&amp; image_xscale &lt; 0.1)
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch blend mode

draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
