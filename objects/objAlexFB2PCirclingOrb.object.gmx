<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexFBPOrbWhite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>sprAlexFBPOrbHitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

image_alpha = 0;

// Change these:
size = 48;
rad = room_width/2 + size*4;
rad_shrink = 4;
dir = random(360);
dir_incr = -1;

t = 0;
squish_multi = 0.03;
scale_mult = 1;
fade_out = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manipulate obj

t++;

image_xscale = size / sprite_get_height(sprAlexFBPOrbHitbox) * scale_mult;
image_yscale = image_xscale;

// Shrink the radious
rad -= abs(rad_shrink);
dir += dir_incr;
x = xstart + lengthdir_x(rad, dir);
y = ystart + lengthdir_y(rad, dir);

// Squish based on speed
var _squish_amnt = point_distance(xprevious, yprevious, x, y) * squish_multi;
image_xscale += _squish_amnt;
image_yscale -= _squish_amnt;
image_angle = point_direction(xprevious, yprevious, x, y);

if(!fade_out) {
    if(t == 2)
        image_alpha = 1;

    if(image_alpha &gt;= 1 &amp;&amp; t mod 3 == 0) {
        var _part = scrAlexMakeParticle(x, y, 8, sprAlexFBPOrbTrailWhite, 0, direction, 0, false, true, false);
            _part.image_xscale = image_xscale;
            _part.image_yscale = image_yscale;
            _part.image_angle = image_angle;
            _part.blend_mode = bm_add;
    }
} else {
    mask_index = sprAlexNoMask;
    image_alpha -= 0.05;
    scale_mult = image_alpha;
    
    if(image_alpha &lt;= 0)
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objAlexFB2PPullVoid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fade out

if(image_alpha == 1 &amp;&amp; !fade_out)
    fade_out = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch blend mode

draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
