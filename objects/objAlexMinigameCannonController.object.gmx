<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

enum ball_type {
    normal,
    golden,
    spiky,
}

t = 0;
active = false;
cannon_amnt = 5;
ball_counter = 0;
golden_ball_reward = 100;
high_score_achieved = false;
player_speed = 5;

clear_text_t = 0;
clear_text_scale_dur = 30;
clear_text_scale = 0;
clear_text_alpha = 1;
clear_text_fade_in = false;
clear_text_fade_out = false;

var _cannon_pad = 48;
var _cannon_x = x;
for(var i=0; i&lt;cannon_amnt; i++) {
    cannon[i] = instance_create(_cannon_x, y, objAlexMinigameCannon);
    _cannon_x += _cannon_pad;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fade out finish text

clear_text_fade_out = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cannon shooting timeline

if(active) {
    t++;
    
    if(t &gt; 5 &amp;&amp; t &lt; 400 &amp;&amp; t mod 33 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t &gt;= 440 &amp;&amp; t &lt;= 520 &amp;&amp; t mod 10 == 0) {
        if(t == 440)
            ball_counter = 0;
            
        var _num = ball_counter mod cannon_amnt;
        scrAlexLaunchBall(_num);
    }
    
    if(t &gt; 550 &amp;&amp; t &lt; 750 &amp;&amp; t mod 33 == 0) {
        if(t == 551)
            ball_counter = 0;
        
        var _rand_cannon = scrAlexGetRandomCannonNum();
        var _type = ball_type.normal;
        if(ball_counter mod 3 == 0)
            _type = ball_type.spiky;
            
        scrAlexLaunchBall(_rand_cannon, _type);
    }
    
    if(t &gt;= 750 &amp;&amp; t &lt;= 770 &amp;&amp; t mod 10 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t &gt;= 760 &amp;&amp; t &lt; 920 &amp;&amp; t mod 33 == 0) {
        if(t == 800)
            ball_counter = 0;
        
        var _rand_cannon = scrAlexGetRandomCannonNum();
        var _type = ball_type.normal;
        if(ball_counter mod 3 == 0)
            _type = ball_type.spiky;
            
        scrAlexLaunchBall(_rand_cannon, _type);
    }
    
    if(t &gt;= 930 &amp;&amp; t &lt;= 1020 &amp;&amp; t mod 10 == 0) {            
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t == 1040) {
        scrAlexLaunchBall(2, ball_type.golden);
    }
    
    if(t == 1041)
        ball_counter = 0;
    if(t &gt; 1030 &amp;&amp; t &lt; 1275 &amp;&amp; t mod 33 == 0) {
        var _pattern = (floor(ball_counter/2)) mod 4;
        switch(_pattern) {
            case 0:
                scrAlexLaunchBall(0, ball_type.spiky);
                scrAlexLaunchBall(4, ball_type.spiky);
                break;
            case 1:
            case 3:
                scrAlexLaunchBall(1, ball_type.normal);
                scrAlexLaunchBall(3, ball_type.normal);
                break;
            case 2:
                scrAlexLaunchBall(2, ball_type.spiky);
                break;
        }
    }
    
    if(t &gt;= 1275 &amp;&amp; t &lt;= 1295 &amp;&amp; t mod 10 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t &gt; 1305 &amp;&amp; t &lt; 1410 &amp;&amp; t mod 33 == 0) {
        var _pattern = (round(ball_counter/2)) mod 4;
        switch(_pattern) {
            case 0:
                scrAlexLaunchBall(0, ball_type.spiky);
                scrAlexLaunchBall(4, ball_type.spiky);
                break;
            case 1:
            case 3:
                scrAlexLaunchBall(1, ball_type.normal);
                scrAlexLaunchBall(3, ball_type.normal);
                break;
            case 2:
                scrAlexLaunchBall(2, ball_type.spiky);
                break;
        }
    }
    
    if(t == 1425) {
        scrAlexLaunchBall(0, ball_type.spiky);
        scrAlexLaunchBall(2, ball_type.spiky);
        scrAlexLaunchBall(4, ball_type.spiky);
    }
    if(t == 1435) {
        scrAlexLaunchBall(1, ball_type.spiky);
        scrAlexLaunchBall(3, ball_type.spiky);
    }
    
    if(t == 1500) {
        scrAlexLaunchBall(0);
        scrAlexLaunchBall(4);
    }
    if(t == 1510) {
        scrAlexLaunchBall(2);
    }
    
    if(t &gt;= 1550 &amp;&amp; t &lt;= 1550 + (4*16) &amp;&amp; t mod 16 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t &gt;= 1685 &amp;&amp; t &lt;= 1685 + (3*16) &amp;&amp; t mod 16 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t &gt;= 1730 &amp;&amp; t &lt;= 1750 &amp;&amp; t mod 10 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t &gt;= 1765 &amp;&amp; t &lt;= 1765 + (3*15) &amp;&amp; t mod 15 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t &gt;= 1815 &amp;&amp; t &lt;= 1815 + (2 * 15) &amp;&amp; t mod 15 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t &gt;= 1855 &amp;&amp; t &lt;= 1860 + (2*8) &amp;&amp; t mod 8 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t &gt;= 1945 &amp;&amp; t &lt;= 1995 &amp;&amp; t mod 5 == 0) {
        if(t == 1945)
            ball_counter = 0;
            
        var _num = ball_counter mod cannon_amnt;
        var _type = ball_type.normal;
        if(ball_counter mod 4 == 0)
            _type = ball_type.spiky;
        scrAlexLaunchBall(_num, _type);
    }
    
    if(t &gt;= 2000 &amp;&amp; t &lt;= 2050 &amp;&amp; t mod 5 == 0) {
        if(t == 2000)
            ball_counter = 0;
            
        var _num = (15-ball_counter) mod cannon_amnt;
        var _type = ball_type.normal;
        if(ball_counter mod 3 == 0)
            _type = ball_type.spiky;
        scrAlexLaunchBall(_num, _type);
    }
    
    if(t == 2075) {
        scrAlexLaunchBall(2, ball_type.golden);
    }
    
    if(t &gt; 2080 &amp;&amp; t &lt;= 2200 &amp;&amp; t mod 33 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    if(t &gt; 2225 &amp;&amp; t &lt;= 2325 &amp;&amp; t mod 33 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    if(t == 2215 || t == 2345) {
        scrAlexLaunchBall(0, ball_type.spiky);
        scrAlexLaunchBall(2, ball_type.spiky);
        scrAlexLaunchBall(4, ball_type.spiky);
    }
    if(t &gt; 2355 &amp;&amp; t &lt;= 2537 &amp;&amp; t mod 33 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t &gt;= 2560 &amp;&amp; t &lt;= 2595 &amp;&amp; t mod 5 == 0) {
        if(t == 2560)
            ball_counter = 0;
            
        var _num = ball_counter mod cannon_amnt;
        scrAlexLaunchBall(_num);
    }
    
    if(t &gt; 2595 &amp;&amp; t &lt;= 2845 &amp;&amp; t mod 33 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t &gt; 2845 &amp;&amp; t &lt;= 2855 &amp;&amp; t mod 15 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t == 2870) {
        scrAlexLaunchBall(0, ball_type.spiky);
        scrAlexLaunchBall(4, ball_type.spiky);
    }
    
    if(t &gt;= 2900 &amp;&amp; t &lt; 3090 &amp;&amp; t mod 15 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        var _type = ball_type.normal;
        if(ball_counter mod 3 == 0)
            _type = ball_type.spiky;
            
        scrAlexLaunchBall(_rand_cannon, _type);
    }
    
    if(t &gt;= 3085 &amp;&amp; t &lt;= 3105 &amp;&amp; t mod 5 == 0) {
        if(ball_counter mod 2 == 0)
            scrAlexLaunchBall(0, ball_type.spiky);
        else
            scrAlexLaunchBall(4, ball_type.spiky);
    }
    
    if(t == 3115) {
        scrAlexLaunchBall(1);
        scrAlexLaunchBall(3);
    }
    if(t == 3130) {
        scrAlexLaunchBall(2);
    }
    
    if(t &gt;= 3180 &amp;&amp; t &lt;= 3235 &amp;&amp; t mod 5 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t == 3145) {
        scrAlexLaunchBall(2);
    }
    if(t == 3170) {
        scrAlexLaunchBall(0);
        scrAlexLaunchBall(4);   
    }
    
    if(t &gt;= 3310 &amp;&amp; t &lt;= 3365 &amp;&amp; t mod 5 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon, ball_type.spiky);
    }
    
    if(t &gt;= 3375 &amp;&amp; t &lt;= 3475 &amp;&amp; t mod 15 == 0) {
        var _rand_cannon = scrAlexGetRandomCannonNum();
        scrAlexLaunchBall(_rand_cannon);
    }
    
    if(t == 3505) {
        scrAlexLaunchBall(0);
        scrAlexLaunchBall(4);  
    }
    if(t == 3515) {
        scrAlexLaunchBall(1);
        scrAlexLaunchBall(3); 
    }
    if(t == 3530) {
        scrAlexLaunchBall(2);
    }
    
    if(t == 3545) {
        scrAlexLaunchBall(0);
        scrAlexLaunchBall(4);  
    }
    if(t == 3550) {
        scrAlexLaunchBall(1);
        scrAlexLaunchBall(3); 
    }
    if(t == 3555) {
        scrAlexLaunchBall(2);
    }
    
    
    // Redeem golden balls
    if(t == 3560) {
        with(objAlexMinigameGoldenBall) {
            event_user(0);  // Slow down
        }   
    }
    if(t == 3620) {
        with(objAlexMinigameGoldenBall) {
            points_on_destroy = other.golden_ball_reward;
            instance_destroy();
        }   
    }
    
    if(t &gt;= 3780) {
        event_user(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Modify bullets

if(active) {
    with(objBullet) {
        if (image_xscale == 1) {
            image_xscale = 3;
            image_yscale = 3;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear text

if(clear_text_fade_out) {
    clear_text_alpha -= 0.025;
    
    if(clear_text_alpha &lt; 0.5) {
        event_user(2);
    }
} else if(clear_text_fade_in) {
    clear_text_t = min(clear_text_t+1, clear_text_scale_dur);
    clear_text_scale = scrAlexEaseOutElastic(clear_text_t, 0, 1.5, clear_text_scale_dur);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restore music and return things back to their default

scrPlayMusic(musAlexMinigameFloor, true);

high_score_achieved = false;

clear_text_t = 0;
clear_text_scale = 0;
clear_text_alpha = 1;
clear_text_fade_in = false;
clear_text_fade_out = false;

with(objAlexMinigameButton) {
    pressed = false;
    img_speed = -0.3;
}

with(objAlexMinigameLockWall)
    mask_index = sprAlexNoMask;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finish the timeline

active = false;
clear_text_fade_in = true;
alarm[0] = clear_text_scale_dur + 50;

global.noPause = false;

with(objAlexMinigameBall)
    shrink = true;

with(objAlexMinigameScoreUI)
    fade_out = true;
    
with(objAlexMinigameSpike)
    active = false;
    
// Check for new high score
if(global.lobbyMinigameScore &gt; global.lobbyMinigameHighScore) {
    global.lobbyMinigameHighScore = global.lobbyMinigameScore;
    high_score_achieved = true;  
    
    // Spawn celebratory confetti
    repeat(20) {
        instance_create(view_xview[0] + 130, room_height, objAlexMinigameConfetti);
        instance_create(view_xview[0] + 400, room_height, objAlexMinigameConfetti);
    }
    
    // Save current score
    scrSaveGame(false);
    
    audio_play_sound(sndAlexMinigameNewBest, 0, false);
} else {
    audio_play_sound(sndAlexMinigameFinish, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start the controller &amp; spawn the score UI

active = true;
t = 0;

global.noPause = true;

instance_create(0, 0, objAlexMinigameScoreUI);

with(objAlexMinigameSpike)
    active = true;
    
with(objAlexMinigameLockWall)
    mask_index = sprite_index;

scrStopMusic();
scrPlayMusic(musAlexMinigameFloorStart, false);
scrAlexShakeCam(25, 8, 8, 4, 6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Re-enable pausing

global.noPause = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw clear text

if(clear_text_scale &gt; 0) {
    draw_set_font(fMenuLobby18);
    draw_set_alpha(clear_text_alpha);
    
    if(high_score_achieved)
        scrDrawTextSquareOutlineExt(250, 304, "New Best!", $e8e0df, $2e1814, 3, fa_center, fa_middle, clear_text_scale, clear_text_scale);
    else
        scrDrawTextSquareOutlineExt(250, 304, "Finish!", $e8e0df, $2e1814, 3, fa_center, fa_middle, clear_text_scale, clear_text_scale);
        
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
