<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexSpeedOrb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

timer = 0;
colliding = false;
draw_y = y;
draw_scale = 1;
glow_alpha = 0;
float_dist = 4;
image_speed = .4;

arrow_x = x;
arrow_y = y;
arrow_image_index = 0;

var _y_travel = y;
var _half_height = sprite_height/2;
while(!place_meeting(x, _y_travel, objBlock)) {
    _y_travel++;
}
aura_y = _y_travel + _half_height;
aura_index = 0;
aura_xscale = 1;
aura_yscale = 1;
aura_alpha = 1;

if(global.lobbyPlayerSpeedUp) {
    sprite_index = sprAlexNormalSpeedOrb;
    aura_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do a shine animation

image_speed = .4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Arrow above kid's head

arrow_image_index += .3;

var p = objPlayer;
if(colliding &amp;&amp; instance_exists(p)) {
    arrow_x = p.x;
    arrow_y = p.y - 16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for input &amp; visuals

timer++;

if(place_meeting(x, aura_y, objPlayer)) {
    colliding = true;
    
    if(scrButtonCheckPressed(global.upButton)) {
        global.lobbyPlayerSpeedUp = !global.lobbyPlayerSpeedUp;
        glow_alpha = 1;
        draw_scale = 1.5;
        aura_xscale = 0.5;
        aura_yscale = 1.5;
        aura_index++;
        
        if(global.lobbyPlayerSpeedUp)
            sprite_index = sprAlexNormalSpeedOrb;
        else
            sprite_index = sprAlexSpeedOrb;
    }
} else {
    colliding = false;
}

draw_y = ystart + dsin(timer)*float_dist;
aura_alpha = .7 + dsin(timer)*.3;

var _anim_spd = .2;
glow_alpha = lerp(glow_alpha, 0, _anim_spd/2);
draw_scale = lerp(draw_scale, 1, _anim_spd);
aura_xscale = lerp(aura_xscale, 1, _anim_spd);
aura_yscale = lerp(aura_yscale, 1, _anim_spd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delay the next opb shine

image_speed = 0;
alarm[0] = 70;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self and aura

draw_sprite_ext(sprAlexSpeedOrbGroundAura, aura_index, x, aura_y, aura_xscale, aura_yscale, 0, -1, aura_alpha)

draw_sprite_ext(sprite_index, image_index, x, draw_y, draw_scale, draw_scale, 0, -1, image_alpha);

draw_set_blend_mode(bm_add);
repeat(3)
    draw_sprite_ext(sprite_index, image_index, x, draw_y, draw_scale, draw_scale, 0, -1, glow_alpha);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw arrow over the player's head

if(colliding)
    draw_sprite(sprAlexPressUpArrow, arrow_image_index, arrow_x, arrow_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
