<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerFall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

recorded_data = ds_queue_create()

t = 0;
scale = 1;
initial_clone_x = x;
initial_clone_y = y;
initial_delay = 100;
draw_xscale = 1;

image_alpha = 0;
image_speed = 0.2;
mask_index = sprAlexNoMask;
alarm[0] = 1;  // Set scale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy data struct &amp; particles

ds_queue_destroy(recorded_data);

if(t &gt; initial_delay) {
    // Make particles
    for(i=0; i&lt;8; i++) {
        var _dir = (360/8) * i;
        var _part = scrAlexMakeParticleExt(x, y, 30, sprAlexDarkClonePart, 0, 0, 0, _dir, 6, -.4, c_white, c_white, bm_normal, false, false, 0, depth+1, false);
            _part.image_xscale = scale;
            _part.image_yscale = scale;
            _part.add_scale = -scale/30;
    }
    
    audio_stop_sound(sndAlexDarkCloneDespawn);
    audio_play_sound(sndAlexDarkCloneDespawn, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set scale

image_xscale = scale;
image_yscale = scale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Record player data &amp; follow

t++;

if(instance_exists(objPlayer)) {
    ds_queue_enqueue(recorded_data, objPlayer.x, objPlayer.y, objPlayer.sprite_index, objPlayer.image_index);
    
    if(t &gt; initial_delay) {
        x = ds_queue_dequeue(recorded_data);
        y = ds_queue_dequeue(recorded_data);
        sprite_index = ds_queue_dequeue(recorded_data);
        image_index = ds_queue_dequeue(recorded_data);
        
        if(scale &gt; 1) {
            var _origin_dist_from_ground = 9;
            y -= (_origin_dist_from_ground * scale - _origin_dist_from_ground);
        }
            
        var _part = scrAlexMakeParticle(x, y, 10, sprite_index, image_index, direction, 0, false, true, false);
            _part.image_xscale = image_xscale * draw_xscale;
            _part.image_yscale = image_yscale;
            _part.depth = depth + 1;
            _part.start_col = c_black;
    } else if(t &gt; initial_delay - 30) {
        if(t == initial_delay - 29)
            audio_play_sound(sndAlexDarkCloneSpawn, 0, false);
    
        var _anim_val = clamp(t - (initial_delay - 31), 0, 30);
        
        image_alpha = scrAlexEaseOutSine(_anim_val, 0, 1, 30);
        x = scrAlexEaseOutSine(_anim_val, xstart, initial_clone_x, 30);
        y = scrAlexEaseOutSine(_anim_val, ystart, initial_clone_y, 30);
        
        if(scale &gt; 1) {
            var _origin_dist_from_ground = 9;
            y -= (_origin_dist_from_ground * scale - _origin_dist_from_ground);
        }
        
        if(t == initial_delay)
            mask_index = sprPlayerMask;
    }
} else {
    instance_destroy();
}

var _x_dif = sign(x - xprevious);
if(_x_dif != 0)
    draw_xscale = _x_dif;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Don't draw, let the objAlexDarkCloneRenderer do the work
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
