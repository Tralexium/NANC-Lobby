<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexLobbyElevator</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

image_speed = 0;
alarm[10] = 1;
colliding = false;
active = true;
force_close = false;
arrow_x = x;
arrow_y = y;
arrow_image_index = 0;

// New to the elevator
floor_id[0] = rLobbyReception;  // Change this later into reception room
floor_id[1] = rLobbyFloor1;
floor_id[2] = rLobbyFloor2;
floor_id[3] = rLobbyFloor3;
floor_id[4] = rLobbyFloor4;
floor_id[5] = rLobbyFloor5;
floor_id[6] = rLobbyFloor6;  // Change this later into floor 6
floor_id[7] = rLobbyBonusFloor;  // Change this later into bonus room

for(var i=0; i&lt;8; i++) {
    if(floor_id[i] == room) {
        current_room_num = i;
        break;
    }
}

bonus_room_available = true; // (global.totalSecretsFound &gt;= 1);

show_panel = false;  // Show button panel
ui_lerp_val = 0;
panel_alpha = 0;
panel_x = view_wview[0]/2;
panel_y = view_hview[0]/2-24;
panel_y_start = panel_y;
panel_y_travel = 32;
cursor_index = current_room_num;
cursor_col = c_white;
cursor_mix_val = 0;
cursor_image_index = 0;
button_x_dist = 19;
button_y_start = 16;
button_y_margin = 24;
text_x = 0;
text_y = view_hview[0]-8;
text_x_start = text_x;
text_travel = 16;
t = 0;  // general use timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go to the appropriate room

with(objAlexLobbyPlayer)
    instance_destroy();  // so that the kid can spawn at the right pos

// Enable pause and restart
global.noRestart = false;
global.noPause = false;
    
room_goto(floor_id[cursor_index])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn Transition

instance_create(x, y, objAlexLobbyBubbleTransitionOut);
alarm[2] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shut the door

force_close = true;
audio_play_sound(sndAlexElevatorClosed, 0, false);

alarm[1] = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Arrow above kid's head

arrow_image_index += .3;

var p = objAlexLobbyPlayer;
if(colliding &amp;&amp; instance_exists(p)) {
    arrow_x = p.x;
    arrow_y = p.y - 16;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Freeze and fade player

if(!active) {
    with(objAlexLobbyPlayer) {
        frozen = true;
        sprite_index = sprPlayerRunning;
        image_speed = 0.4;
        if(draw_alpha &gt; 0) {
            draw_alpha -= .05;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Zoom in camera

if(!active) {
    view_wview[0] = round(lerp(view_wview[0], 300, .1));
    view_hview[0] = round(lerp(view_hview[0], 228, .1));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increment general use timer

t++;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Panel controls

if(show_panel &amp;&amp; active) {
    //  Close the panel if shoot
    if(scrButtonCheckPressed(global.menuBackButton)) {
        show_panel = false;
        
        // Enable pause and restart
        global.noRestart = false;
        global.noPause = false;
        
        audio_play_sound(sndAlexElevatorClosed, 0, false);
        with(objAlexLobbyPlayer) {
            frozen = false;
        }
    }
        
    //  Confirm the choice
    var is_same_floor = (cursor_index == current_room_num);
    var bonus_is_locked = ((cursor_index == 7) &amp;&amp; !bonus_room_available);
    if(scrButtonCheckPressed(global.menuAcceptButton) &amp;&amp; !(is_same_floor || bonus_is_locked)) {
        show_panel = false;
        panel_alpha = 0;
        active = false;
        alarm[0] = 40;
        instance_create(0, 0, objAlexMusicFadeTransition);
        audio_play_sound(sndAlexElevatorPickFloor, 0, false);
        audio_play_sound(sndAlexKidEnter, 0, false);
    }
    
    var H = (scrButtonCheckPressed(global.menuRightButton) - scrButtonCheckPressed(global.menuLeftButton));
    var V = (scrButtonCheckPressed(global.menuUpButton) - scrButtonCheckPressed(global.menuDownButton));
    
    if(H+V != 0)
        audio_play_sound(sndAlexElevatorSwitchButton, 0, false);
    
    cursor_index += H + (V*2);
    
    if(cursor_index &gt; 7) cursor_index -= 8;
    if(cursor_index &lt; 0) cursor_index += 8;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for player

if(place_meeting(x, y, objAlexLobbyPlayer) &amp;&amp; active) {
    colliding = true;
    
    // Check if the player has entered the door
    if(scrButtonCheckPressed(global.upButton) &amp;&amp; !show_panel) {
        show_panel = true;
        
        // Disable pause and restart
        global.noRestart = true;
        global.noPause = true;
        
        audio_play_sound(sndAlexElevatorOpen, 0, false);
        with(objAlexLobbyPlayer) {
            frozen = true;
        }
    }
} else {
    colliding = false;
}

if((colliding || !active) &amp;&amp; !force_close) {
    image_speed = .25;
} else {
    image_speed = -.25;
}

image_index = clamp(image_index, .5, image_number-1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manage UI values

cursor_image_index += .3;

if(show_panel) {    
    ui_lerp_val = min(ui_lerp_val+.05, 1);
    
    var is_same_floor = (cursor_index == current_room_num);
    var bonus_is_locked = ((cursor_index == 7) &amp;&amp; !bonus_room_available);
    if(scrButtonCheckPressed(global.jumpButton) &amp;&amp; (is_same_floor || bonus_is_locked)) {
        cursor_mix_val = 1;
        audio_play_sound(sndAlexElevatorError, 0, false);
    }
    
} else {
    ui_lerp_val = max(ui_lerp_val-.05, 0);
}

if(active) {
    panel_alpha = scrAlexEaseOutSine(ui_lerp_val, 0, 1, 1);
    panel_y = scrAlexEaseOutSine(ui_lerp_val, panel_y_start, panel_y_start - panel_y_travel, 1);
    text_x = scrAlexEaseOutSine(ui_lerp_val, text_x_start, text_x_start + text_travel, 1);
    
    cursor_col = merge_colour(c_white, c_red, cursor_mix_val);
    cursor_mix_val = max(cursor_mix_val-.1, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the button panel UI

if(panel_alpha == 0) exit;

draw_set_alpha(panel_alpha/2)
display_set_gui_size(view_wview[0], view_hview[0])

// Draw dark overlay
draw_set_colour($2e1814)
draw_rectangle(0, 0, view_wview[0], view_hview[0], false)

// Draw button panel
draw_set_alpha(panel_alpha)
draw_sprite(sprAlexLobbyElevatorButtonPanel, 0, panel_x, panel_y);

draw_set_font(fMenuLobby6);

// Draw the "choose a floor" text above the panel
scrDrawTextSquareOutline(panel_x, panel_y - 24, "Choose a Floor", $e8fff5, $2e1814, 1, fa_center, fa_top);

var button_amnt = 8;
for(var i=0; i&lt;button_amnt; i++) {
    var inverse_i = button_amnt - i - 1;  // current floor number that we are rendering
    var xx = panel_x - button_x_dist;  // If i is odd draw to the right side
    if(inverse_i mod 2 == 0)
        xx = panel_x + button_x_dist;
    var yy = panel_y + button_y_start + (button_y_margin * floor(inverse_i/2))  // after 2 buttons move down by 1 margin
    
    // Draw buttons
    if(current_room_num == i)
        draw_sprite(sprAlexLobbyElevatorButton, 2, xx, yy);
    else if(i == 7 &amp;&amp; !bonus_room_available)
        draw_sprite(sprAlexLobbyElevatorButton, 1, xx, yy);
    else
        draw_sprite(sprAlexLobbyElevatorButton, 0, xx, yy);
    
    // Draw bonus floor button
    if(i == 7) {
        if(bonus_room_available)
            scrDrawTextSquareOutline(xx, yy+2, "B", $e8fff5, $2e1814, 1, fa_center, fa_top);
        else   
            scrDrawTextSquareOutline(xx, yy+2, "B", $3945e6, $2e1814, 1, fa_center, fa_top);
    }
    // Draw the ground floor button 
    else if(i == 0)    
        scrDrawTextSquareOutline(xx, yy+2, "G", $e8fff5, $2e1814, 1, fa_center, fa_top);
    // Draw the number floor buttons
    else
        scrDrawTextSquareOutline(xx, yy+2, string(i), $e8fff5, $2e1814, 1, fa_center, fa_top);
        
    // Draw the cursor
    if(i == cursor_index)
        draw_sprite_ext(sprAlexLobbyElevatorButtonCursor, cursor_image_index, xx, yy, 1, 1, 0, cursor_col, panel_alpha);
}

draw_set_font(fLobbySmall);

// Draw the controls text
var scr_to_get_key = scrGetKeybind;
var array_index = 0;
if(global.controllerMode) {
    scr_to_get_key = scrGetControllerBind;
    array_index = 1;
}
    
scrDrawTextSquareOutline(text_x, text_y, "Press ["+script_execute(scr_to_get_key,global.menuAcceptButton[array_index])+"] to select", $e8fff5, $2e1814, 1, fa_left, fa_bottom);
scrDrawTextSquareOutline(view_wview[0]-text_x, text_y, "Press ["+script_execute(scr_to_get_key,global.menuBackButton[array_index])+"] to cancel", $e8fff5, $2e1814, 1, fa_right, fa_bottom);

draw_set_alpha(1)
display_set_gui_size(view_wport[0], view_hport[0])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the elevator

draw_self();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the arrow

if(colliding &amp;&amp; active)
    draw_sprite(sprAlexPressUpArrow, arrow_image_index, arrow_x, arrow_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the current floor light

if(current_room_num &lt; 7) {
    var offset = current_room_num*6;
    draw_sprite(sprAlexLobbyElevatorLight, 0, x-17, y-8-offset);
} else {
    for(var i=0; i&lt;7; i++) {
        var a = abs(dsin((t*3)+(i*10)))
        var offset = i*6;
        draw_sprite_ext(sprAlexLobbyElevatorLight, 0, x-17, y-8-offset, 1, 1, 0, -1, a);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
