<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

orb_amnt = 6;
orb_size = 32;
start_rad = 96;
rad = start_rad;
time_before_shrink = 50;
shrink_length = 80;
initial_spd = -10;
target_spd = 0;
spd = initial_spd;
spd_change_dur = time_before_shrink / 2;

t = 0;
magic_circle_angle = 0;
magic_circle_alpha = 0;
dir = random(360);
orbs_set = false;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn shield orbs

for(var i=0; i&lt;orb_amnt; i++) {
    var _dir = 360 / orb_amnt;
    var _x = lengthdir_x(rad, _dir);
    var _y = lengthdir_y(rad, _dir);
    orb[i] = scrFBPFadeOrb(_x, _y, orb_size);
    orb[i].destroy_when_outside = false;
}

rad = start_rad;
spd_change_dur = time_before_shrink / 2;
orbs_set = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manipulate orbs

var _orb_sep = 360 / orb_amnt;


if(orbs_set) {
    for(var i=0; i&lt;orb_amnt; i++) {
        if(!instance_exists(orb[i]))
            continue;
    
        var _sep = _orb_sep * i;
        orb[i].x = x + lengthdir_x(rad, dir + _sep);
        orb[i].y = y + lengthdir_y(rad, dir + _sep);
    }
    
    dir += spd;
    
    t++;
    var _anim_val = clamp(t, 0, spd_change_dur)
    spd = scrAlexEaseOutSine(_anim_val, initial_spd, target_spd, spd_change_dur);
    magic_circle_alpha = scrAlexEaseOutSine(_anim_val, 0, 0.6, spd_change_dur);
    
    if(t &gt;= time_before_shrink) {
        var _rad_anim_val = clamp(t - time_before_shrink, 0, shrink_length);
        rad = scrAlexEaseInSine(_rad_anim_val, start_rad, 0, time_before_shrink);
        
        if(_rad_anim_val == shrink_length) {
            for(var i=0; i&lt;orb_amnt; i++) {
                if(i != 0)
                    orb[i].is_outside = true;  // to avoid multiple explosion effects
                
                if(instance_exists(orb[i]))
                    instance_destroy(orb[i]);
            }
            
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the magic circle in the middle

var _scale = rad / 100;
magic_circle_angle += sign(initial_spd) * 2;

draw_set_blend_mode(bm_add);
draw_sprite_ext(sprAlexFBParticleMagicCircle, 0, x, y, _scale, _scale, magic_circle_angle, -1, magic_circle_alpha);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
