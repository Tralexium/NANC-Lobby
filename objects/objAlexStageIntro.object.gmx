<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars


stage_title = "";
stage_title_font = fMenuLobby18;
stage_title_alpha = 0;
stage_title_x = display_get_gui_width();
stage_title_y = display_get_gui_height() - 104;
stage_title_queue_time = 20;
stage_title_anim_len = 40;

maker_name = ""
maker_font = fLobbySmall24;
maker_name_alpha = 0;
maker_name_x = display_get_gui_width();
maker_name_y = display_get_gui_height() - 72;
maker_name_queue_time = 30;
maker_name_anim_len = 40;

timer = 0;
outline_size = 2;
shadow_dist = 8;
animation_end_queue_time = 120;
kill_object_queue_time = 150;
text_col = $e8fff5;
outline_col = $2e1814;

bar_anim_length = 35;
bar_scroll_min_speed = 0.5;
bar_scroll_max_speed = 8;
bar_scroll_speed = bar_scroll_max_speed;
bar_y = -96;
bar_rise_dist = display_get_gui_height()/2 + 32;
bar_render_x = 0;
bar_length = 32;
bar_height = 96;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animations

timer++;

// Top &amp; Bottom bars
if(timer &lt;= bar_anim_length) {
    var _anim_progress = scrAlexEaseOutSine(timer, 1, 0, bar_anim_length);
    bar_y = -32 + (bar_rise_dist * _anim_progress);
}
bar_render_x = (bar_render_x + bar_scroll_speed) mod bar_length;


if(timer &lt; animation_end_queue_time) {
    bar_scroll_speed = lerp(bar_scroll_speed, bar_scroll_min_speed, 0.025);

    // Stage title
    var _anim_progress = clamp(timer - stage_title_queue_time, 0, stage_title_anim_len);
    var _start_x = display_get_gui_width();
    var _end_x = display_get_gui_width() - 64;
    stage_title_x = scrAlexEaseOutSine(_anim_progress, _start_x, _end_x, stage_title_anim_len);
    stage_title_alpha = scrAlexEaseOutSine(_anim_progress, 0, 1, stage_title_anim_len);
    
    // Maker name
    _anim_progress = clamp(timer - maker_name_queue_time, 0, maker_name_anim_len);
    maker_name_x = scrAlexEaseOutSine(_anim_progress, _start_x, _end_x, maker_name_anim_len);
    maker_name_alpha = scrAlexEaseOutSine(_anim_progress, 0, 1, maker_name_anim_len);
} else {
    // Top &amp; Bottom bars reverse
    var _anim_progress = clamp(timer - animation_end_queue_time, 0, bar_anim_length);
    bar_y = scrAlexEaseOutSine(_anim_progress, -32, -bar_height, bar_anim_length);
    bar_scroll_speed = scrAlexEaseOutSine(_anim_progress, bar_scroll_min_speed, bar_scroll_max_speed, bar_anim_length);

    // Stage title reverse
    var _start_x = display_get_gui_width();
    var _end_x = display_get_gui_width() - 64;
    stage_title_x = scrAlexEaseOutSine(_anim_progress, _end_x, _start_x, stage_title_anim_len);
    stage_title_alpha = scrAlexEaseOutSine(_anim_progress, 1, 0, stage_title_anim_len);
    
    // Maker name reverse
    maker_name_x = scrAlexEaseOutSine(_anim_progress, _end_x, _start_x, maker_name_anim_len);
    maker_name_alpha = scrAlexEaseOutSine(_anim_progress, 1, 0, maker_name_anim_len);
}

if(timer &gt;= kill_object_queue_time)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw it

// Draw the top &amp; bottom bars
draw_set_alpha(1);
var bar_segments = round(display_get_gui_width() / bar_length);
var bar_bottom_y = display_get_gui_height()- bar_y - bar_height;
var bar_render_x_bottom = bar_length - bar_render_x;
for(var i=0; i&lt;bar_segments; i++) {
    var segment_x = i*32;
    draw_sprite_part(sprAlexPauseUITopBar, 0, bar_render_x, 0, bar_length, bar_height, segment_x, bar_y);
    draw_sprite_part(sprAlexPauseUIBottomBar, 0, bar_render_x_bottom, 0, bar_length, bar_height, segment_x, bar_bottom_y);
}
var _gui_width = display_get_gui_width();
var _gui_height = display_get_gui_height();
draw_set_colour(outline_col);
draw_rectangle(-1, -1, _gui_width, bar_y, false);
draw_rectangle(-1, bar_bottom_y + bar_height, _gui_width, _gui_height, false);

// Stage title
draw_set_font(stage_title_font);
draw_set_alpha(stage_title_alpha*0.6);
scrDrawTextSquareOutline(stage_title_x - shadow_dist, stage_title_y + shadow_dist, stage_title, outline_col, outline_col, outline_size, fa_right, fa_bottom);
draw_set_alpha(stage_title_alpha);
scrDrawTextSquareOutline(stage_title_x, stage_title_y, stage_title, text_col, outline_col, outline_size, fa_right, fa_bottom);


// Maker name
var _maker_name_with_prefix = "Made by: " + maker_name;
draw_set_font(maker_font);
draw_set_alpha(maker_name_alpha*0.6);
scrDrawTextSquareOutline(maker_name_x - shadow_dist, maker_name_y + shadow_dist, _maker_name_with_prefix, outline_col, outline_col, outline_size, fa_right, fa_bottom);
draw_set_alpha(maker_name_alpha);
scrDrawTextSquareOutline(maker_name_x, maker_name_y, _maker_name_with_prefix, text_col, outline_col, outline_size, fa_right, fa_bottom);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
