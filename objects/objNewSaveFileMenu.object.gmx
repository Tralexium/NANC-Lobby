<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

// Core
timer = 0;
active = false;
close_ui = false;
save_index = 0;
intro_animation_length = 20;

// Visual
draw_alpha = 0;

header_font = fMenuLobby12;
header_text = "Choose a Save File";
header_x = room_width/2;
header_y = 32;

white_col = $e8e0df; // Greyish white
sky_col = $ceb85a; // Sky blue
pink_col = $702a9c; // Redish fuchsia
dark_col = $2e1814; // Night blue black
gradient_col = sky_col; // Alters between sky blue and pink
gradient_spd = 2;

box_anchor_x = room_width/2;
box_anchor_y = room_height/2 + 32;
box_w = 300;
box_h = 170;
box_corner_rad = 60;
box_pad_h = 0;
box_pad_v = 0;
box_pad_h_start = 192-32;
box_pad_v_start = 128-32;
box_pad_h_end = 192;
box_pad_v_end = 128;

selection_box_w = box_w;
selection_box_h = box_h;
selection_box_start_w = selection_box_w;
selection_box_start_h = selection_box_h;
selection_box_end_w = selection_box_w;
selection_box_end_h = selection_box_h + 80;
selection_box_anim_timer = 0;
selection_box_anim_length = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Back to main menu

with(objNewTitleMenu){
    can_interact = true;
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Logic &amp; Input

timer++;

if(timer == intro_animation_length)
    active = true;
    
if(active) {
    var _H, _V, _Back, _Select;
    _H = scrButtonCheckPressed(global.menuRightButton) - scrButtonCheckPressed(global.menuLeftButton);
    _V = scrButtonCheckPressed(global.menuDownButton) - scrButtonCheckPressed(global.menuUpButton);
    _Back = scrButtonCheckPressed(global.menuBackButton) || keyboard_check_pressed(vk_escape);
    _Select = scrButtonCheckPressed(global.menuAcceptButton) || keyboard_check_pressed(vk_enter);

    if(_Back) {
        audio_play_sound(sndAlexMenuGoBack, 0, false);
    
        close_ui = true;
        active = false;
    }
    
    if(_H + _V != 0) {
        audio_play_sound(sndAlexMenuSwitchOption, 0, false);
        selection_box_anim_timer = 0;
        
        save_index += _H + (_V * 2);
        if(save_index &gt; 3)
            save_index -= 4;
        if(save_index &lt; 0)
            save_index += 4;
    }
}

if(close_ui) {
    draw_alpha -= .05;
    if(draw_alpha &lt;= 0 &amp;&amp; !alarm[0])
        alarm[0] = 20;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation

// Shift the colors for the gradient
var _amnt = abs(dsin(timer * gradient_spd));
gradient_col = merge_colour(sky_col, pink_col, _amnt);

// Intro animation
if(timer &lt;= intro_animation_length) {
    draw_alpha = scrAlexEaseOutSine(timer, 0, 1, intro_animation_length);
    box_pad_h = scrAlexEaseOutSine(timer, box_pad_h_start, box_pad_h_end, intro_animation_length);
    box_pad_v = scrAlexEaseOutSine(timer, box_pad_v_start, box_pad_v_end, intro_animation_length);
}

if(active) {
    if(selection_box_anim_timer &lt;= selection_box_anim_length) {
        selection_box_w = scrAlexEaseOutElastic(selection_box_anim_timer, selection_box_start_w, selection_box_end_w, selection_box_anim_length);
        selection_box_h = scrAlexEaseOutElastic(selection_box_anim_timer, selection_box_start_h, selection_box_end_h, selection_box_anim_length);
        selection_box_anim_timer++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Interface

draw_set_alpha(draw_alpha);

// Header
draw_set_font(header_font);
scrDrawTextSquareOutline(header_x, header_y, header_text, white_col, dark_col, 2, fa_center, fa_top);

// Dark Boxes
var _box_x1, _box_y1, _box_x2, _box_y2;
var _i = 0;
for(var yy=-1; yy&lt;=1; yy += 2) {
    for(var xx=-1; xx&lt;=1; xx += 2) {  
        
        if(_i == save_index &amp;&amp; timer &gt; intro_animation_length) {
            _box_x1 = box_anchor_x + (((selection_box_w / 2) + box_pad_h) * xx);
            _box_x2 = box_anchor_x + ((-(selection_box_w / 2) + box_pad_h) * xx);
            _box_y1 = box_anchor_y + (((selection_box_h / 2) + box_pad_v) * yy);
            _box_y2 = box_anchor_y + ((-(selection_box_h / 2) + box_pad_v) * yy);
        
            draw_set_colour(gradient_col);
            draw_roundrect_ext(_box_x1, _box_y1, _box_x2, _box_y2, box_corner_rad, box_corner_rad, false);
        }
        
        _box_x1 = box_anchor_x + (((box_w / 2) + box_pad_h) * xx);
        _box_x2 = box_anchor_x + ((-(box_w / 2) + box_pad_h) * xx);
        _box_y1 = box_anchor_y + (((box_h / 2) + box_pad_v) * yy);
        _box_y2 = box_anchor_y + ((-(box_h / 2) + box_pad_v) * yy);
        
        draw_set_colour(dark_col);
        draw_roundrect_ext(_box_x1, _box_y1, _box_x2, _box_y2, box_corner_rad, box_corner_rad, false);
        
        _i++;
    }
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
