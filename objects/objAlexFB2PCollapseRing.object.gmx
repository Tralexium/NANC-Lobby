<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

orb_amnt = 3;
orb_size = 48;
start_rad = 150;
expand_rad = start_rad + 50;
rad = start_rad;
spin_dir = choose(-1, 1);
start_angle = 400 * spin_dir;
target_angle = random(180) * spin_dir;


spin_dur = 40;
expand_dur = 20;
is_expanding = false;
dash_orb_spd = 30;
dash_orb_squish_amnt = 0.01;

t = 0;
dir = 0;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn dash orbs

for(var i=0; i&lt;orb_amnt; i++) {
    if(instance_exists(orb[i])) {
        var _dir = point_direction(orb[i].x, orb[i].y, x, y);
        var _dash_orb = scrFBPSquishOrb(orb[i].x, orb[i].y, orb_size, _dir, 0, dash_orb_spd, 0, 0);
            _dash_orb.squish_multi = dash_orb_squish_amnt;
    
        orb[i].is_outside = true;  // to avoid multiple explosion effects
        instance_destroy(orb[i]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn shield orbs

for(var i=0; i&lt;orb_amnt; i++) {
    var _dir = 360 / orb_amnt;
    var _x = lengthdir_x(rad, _dir);
    var _y = lengthdir_y(rad, _dir);
    orb[i] = scrFBPFadeOrb(_x, _y, orb_size);
    orb[i].destroy_when_outside = false;
    orb[i].depth = depth;
}

orbs_set = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manipulate orbs

var _orb_sep = 360 / orb_amnt;


if(orbs_set) {

    t++;

    if(!is_expanding) {
        dir = scrAlexEaseOutSine(t, start_angle, target_angle, spin_dur);
        
        if(instance_exists(objAlexFlyingPlayer)) {
            x = objAlexFlyingPlayer.x;
            y = objAlexFlyingPlayer.y;
        }
        
        if(t == spin_dur) {
            is_expanding = true;
            t = 0;
        }
    } else {
        rad = scrAlexEaseOutSine(t, start_rad, expand_rad, expand_dur);
        
        if(t == expand_dur) {
            instance_destroy();
        }
    }
    
    
    for(var i=0; i&lt;orb_amnt; i++) {
        if(!instance_exists(orb[i]))
            continue;
    
        var _sep = _orb_sep * i;
        orb[i].x = x + lengthdir_x(rad, dir + _sep);
        orb[i].y = y + lengthdir_y(rad, dir + _sep);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
