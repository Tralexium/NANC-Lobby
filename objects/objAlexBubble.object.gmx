<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexBubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

duration = 250;

t = 0;
active = false;
acceleration = 0.25;
friction = 0.125;
player_x = x;
player_y = y;
player_xscale = 1;
player_start_x = x;
player_start_y = y;
draw_xscale = 1;
draw_yscale = 1;
boing_spd = 40;
boing_amnt = 0;
image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Release the player

with(objPlayer) {
    if(vspeed &gt; 0) {
        vspeed = 0;
        djump = 1;
    }
    
    visible = true;
    frozen = false;
}

// Visual pop effect and SFX
scrAlexMakeParticle(x, y, 10, sprAlexBubblePop, 0.49, 0, 0, false, false, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animations

if(active) {
    t++;

    // Snap fake player sprite to center
    var _player_snap_val = min(t, 10);
    player_x = scrAlexEaseOutSine(_player_snap_val, player_start_x, x, 10);
    player_y = scrAlexEaseOutSine(_player_snap_val, player_start_y, y, 10);
    player_xscale = sign(hspeed);
    if(player_xscale == 0)
        player_xscale = 1;
    
    // Boing animation
    draw_xscale = 1 + dcos(t*boing_spd)*boing_amnt;
    draw_yscale = 1 + dsin(t*boing_spd)*boing_amnt;
    boing_amnt = max(boing_amnt - 0.05, 0);
    
    // Flickering
    if(t &gt; duration-50 &amp;&amp; t mod 3 == 0) {
        image_alpha *= -1;
    }
    else if(t &gt; duration-100 &amp;&amp; t mod 7 == 0) {
        image_alpha *= -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

var _jump = scrButtonCheckPressed(global.jumpButton);
var _hor = (scrButtonCheck(global.rightButton) - scrButtonCheck(global.leftButton));
var _ver = (scrButtonCheck(global.downButton) - scrButtonCheck(global.upButton));

if(active) {    
    hspeed += _hor * acceleration;
    vspeed += _ver * acceleration;
    
    if(place_meeting(x + hspeed, y, objBlock)) {
        while(!place_meeting(x + sign(hspeed), y, objBlock))
            x += sign(hspeed);
    
        hspeed *= -1;
        boing_amnt = 0.5;
        // SFX
    }
        
    if(place_meeting(x, y + vspeed, objBlock)) {
        while(!place_meeting(x, y + sign(vspeed), objBlock))
            y += sign(vspeed);
    
        vspeed *= -1;
        boing_amnt = 0.5;
        // SFX
    }
    
    with(objPlayer) {
        x = other.x;
        y = other.y;
    }
    
    // Check if it's expired or player is dead
    if(t &gt;= duration || _jump || !instance_exists(objPlayer)) {
        if(_jump) {
            with(objPlayer) {
                frozen = false;
                djump = 0;
                vspeed = -jump2;
                audio_play_sound(sndDJump,0,false);
            }
        }
    
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayerKiller">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy the bubble

if(active)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Put the player inside the bubble

if(!active) {
    active = true;
    boing_amnt = 0.5;
    player_start_x = other.x;
    player_start_y = other.y;
    player_xscale = other.image_xscale;
    
    other.visible = false;
    other.djump = 0;
    other.frozen = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw fake player and bubble

if(active)
    draw_sprite_ext(sprPlayerFall, image_index, player_x, player_y, player_xscale, 1, 0, -1, 1);

draw_sprite_ext(sprite_index, image_index, x, y, draw_xscale, draw_yscale, 0, -1, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
