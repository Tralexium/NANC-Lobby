<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAlexMinigameSpikes</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

image_speed = 0;

active = false;
target_y = ystart + 16;
y = target_y;
point_penalty = -10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Logic

if(active)
    target_y = ystart;
else
    target_y = ystart + 16;
    
y = lerp(y, target_y, 0.15);

if(active &amp;&amp; place_meeting(x, y, objAlexLobbyPlayer)) {
    with(objAlexLobbyPlayer) {
        if(mg_iframes == 0) {
            mg_iframes = mg_max_iframes;
            global.lobbyMinigameScore += other.point_penalty;
            
            scrAlexShakeCam(15, 5, 5, 4, 3);
            
            var _sfx = audio_play_sound(sndAlexMinigameSpikyBallKick, 0, false);
            audio_sound_pitch(_sfx, random_range(0.9, 1.1));
            
            var _floating_score = instance_create(x, y, objAlexMinigameBallScoreText);
                _floating_score.text_score = other.point_penalty;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the appropriate chunk

var L = false;
var R = false;
var _img_index = 0;

if(place_meeting(x - 1, y, objAlexMinigameSpike))
    L = true;
if(place_meeting(x + 1, y, objAlexMinigameSpike))
    R = true;
    
if(L &amp;&amp; R)
    _img_index = 0;
else if(L)
    _img_index = 1;
else
    _img_index = 2;
    
draw_sprite_ext(sprite_index, _img_index, x, y, image_xscale, image_yscale, image_angle, -1, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
